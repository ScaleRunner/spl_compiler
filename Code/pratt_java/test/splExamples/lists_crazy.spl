main()::->Void
{

    [Int] a = [];
    [Int] b = 7:[];
    [Int] c = 2:b;
    var zz = []:[];
    [[Int]] xx = (2:[]):zz;


    [[Int]] d = (2:[]):[];

    [[(Int, [Char])]] e = ((1, []):[]) : ((2, ('a':[])):[]);
    [[Int]] f = (2:[]):[]:[]:[];

    [[[([Int], [Int])]]]  y = (((([],[]):((1:[]),(2:[])):[]):[]):[]);

    //Should not work and does not
    //[[[([Int], [Int])]]] n = (([],[]):(([]),([])):[]) : y;
    //Should not work and does not;
    //[[Int]] h = 2:[]:[]:[]:[];
    //Should not work and does not;
    //[[[Int]]] l =  (4:5:6:[]) : (((1:2:3:[]):[]):[]);
    //Attempts to create list with []:y, which fails, but generates nullpointerexception
    //somewhere else after error is found
    //[[[([Int], [Int])]]] n = ([],[]):(([]),([])):[] : y;
    //Unbalanced parenthesis give strange error
    //Missing ';' at the end of the line.
    //[[[([Int], [Int])]]] n = ([],[]):([]),([])):[] : y;

    //Should not work and does not;
    //[[(Int, Char)]] g = (1, []): (((2, 'a'):[]):[]);

    //Should not work and does not;
    //[[(Int, Char)]] g = ((1, []):[]) : (((2, 'a'):[]):[]);
    //Should not work and does not;
    //[Int] l = []:1:[];
    //Should not work and does not;
    //[([Int], [Int])]  k = ([],[]):((1:[]),((2,3):[])):[];
    //works and should work
    //[([Int], [Int])]  k = ([],[]):((1:[]),(2:[])):[];

    //This actually works as it should :O
    [[[[([Int], [Int])]]]]  h = (((([],[]):(([]),([])):[]):[]):[]):(((([],[]):((1:[]),(2:[])):[]):[]):[]);

    [([Int], [Int])]  i = ([],[]):((1:[]),(2:[])):[];
    [[[([Int], [Int])]]]  j = ((([],[]):((1:[]),(2:[])):[]):[]):[];
    //[[[([Int], [Int])]]] n = i : y;
    [[(Int, [Char])]] k = ((1, []):[]) : (((2, ('a':[])):[]):[]);

    [[(Int, [([Char],Char)] )]] l =  ((1, (([],'a'):[]) ):[]) : (((2, ((('b':[]),'c'):[]) ):[]):[]);

    [[(Int, [([Char],Char)] )]] m =  ((1, (([],'a'):[]) ):[]) : (((2, ((  ('b':[]) ,'c'):[]) ):[]):[]);


    [[[[(Char,[Int])]]]] n =    (((('a', a):[]):[]):[]) : (((('b', []):[]):[]):[]);
    //Should work and it does work
    [[(Int, [(Char,Char)] )]] o =  ((1, (('d','a'):[]) ):[]) : ((2, (('b','c'):[]) ):[]);
    //Shouldn't work and it does not
    //[[(Int, [([Char],Char)] )]] s =  ((1, (([],'a'):[]) ):[]) : ((2, (('b','c'):[]) ):[]);
    [ ([Int],Int) ] p = ([],1) : (c,2) : ([],3): ([],4):[];

    ([Int], Char) q = (a, 'c');
    //Should not work and does not
    //But gets null pointer exception
    //[ (Int, [Int]) ] r = (1,b) : (2,c) : (3,[]:[]): (4,[]):[];
    //This works as it should though
    //[ (Int, [[Int]]) ] r = (1,(7:[]):[]) : (2,(7:[]):[]) : (3, ([]:[])): (4,[]):[];
    [ (Int, [Int]) ] r = (1,b) : (2,c) : (3,[]): (4,[]):[];
    [ ([Int],Int) ] s = (b,1) : (c,2) : ([],3): ([],4):[];

    [(Int,Int)] t = (1,1) : (2,2) : (3,3) : [];

    Int u = c.tl.hd;
    [[Int]] g = a : b : c : [];

    // True
    print( isEmpty(a) );

    // 7
    print( b.hd );
    // False
    print( isEmpty(b) );
    // True
    print( isEmpty(b.tl) );

    // 2
    print( c.hd );
    // 7
    print( c.tl.hd );
    // False
    print( isEmpty(c.tl) );

    // 7
    print(u);

    // 7
    print(g.tl.hd.hd);
    // 2
    print(g.tl.tl.hd.hd);
    // 7
    print(g.tl.tl.hd.tl.hd);
}
